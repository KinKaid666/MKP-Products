# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task # # To define the time you can provide concrete values for # minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h  dom mon dow   command

# real-time
*/10 * * * * /mkp/src/bin/get-inventory.pl
*/2  * * * * /mkp/src/bin/get-financial-events.pl
*/10 * * * * /mkp/src/bin/get-inbound-shipments.pl

# Flush once a day
0 1 * * * /mkp/src/bin/get-inbound-shipments.pl --status=CLOSED --status=DELETED
0 2 * * * /mkp/src/bin/get-inventory.pl --from=2017-01-01
0 3 * * * /mkp/src/bin/cleanup-logs.zsh

# backups
0 4 * * * cd /mkp/backups ; mysqldump --user mkp --password='Pa$$w0rd' usertable --result-file usertable-$(date '+\%Y\%m\%d').sql ; tar -cvzf usertable-$(date '+\%Y\%m\%d').sql.tar.gz usertable-$(date '+\%Y\%m\%d').sql > /dev/null 2>&1; rm usertable-$(date '+\%Y\%m\%d').sql
0 5 * * * cd /mkp/backups ; mysqldump --user mkp --password='Pa$$w0rd' mkp_products --result-file mkp_products-$(date '+\%Y\%m\%d').sql ; tar -cvzf mkp_products-$(date '+\%Y\%m\%d').sql.tar.gz mkp_products-$(date '+\%Y\%m\%d').sql > /dev/null 2>&1; rm mkp_products-$(date '+\%Y\%m\%d').sql
